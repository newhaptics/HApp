# -*- coding: utf-8 -*-
"""
Created on Wed Nov  2 10:29:05 2022

@author: Derek Joslin
"""

"""
@RomInputsBegin
#Haptics engine
HapticsEngineAddress = id(HapticsEngine)
@RomInputsEnd
"""

import RomAPI as rs
import NotePadStates as ns

class NotePadController(rs.RomController):
    
    def __init__(self, HapticsEngineAddress, stopEvent):

        super().__init__(HapticsEngineAddress, stopEvent)

        #initialize all state objects and pass in the controller
        self.NotePadStartMenu = ns.NotePadStartMenu(self)
        
        self.NotePadTextEditor = ns.NotePadTextEditor(self)
        
        self.EndRom = ns.NotePadExitState(self)
        
        #current state of rom (user can intialize a default state)
        self.stateKey = 'Start Menu'
        
        #available states for the rom
        self.romStateDictionary = {'Start Menu' : self.NotePadStartMenu,
                                   'Text Editor' : self.NotePadTextEditor,
                                   'Exit Rom' : self.EndRom}
    def exitRom(self):
        self.stateKey = 'Exit Rom'
        print("disconnected")
        
ThisRom = NotePadController(HapticsEngineAddress, stopEvent)
ThisRom.runRom()