# -*- coding: utf-8 -*-
"""
Created on Mon Feb 20 16:07:51 2023

@author: Derek Joslin

"""

"""
@RomInputsBegin
#Haptics engine
HapticsEngineAddress = id(HapticsEngine)
@RomInputsEnd
"""

import RomAPI as rs
import TouchTunesStates as avs

class TunesController(rs.RomController):

    def __init__(self, HapticsEngineAddress, stopEvent):

        super().__init__(HapticsEngineAddress, stopEvent)

        #initialize all state objects and pass in the controller
        print("testing rom")
        self.TunesStartMenu = avs.TunesStartMenu(self)

        self.EndRom = rs.RomOperation(self)

        #current state of rom (user can intialize a default state)
        self.stateKey = 'Start Menu'

        #available states for the rom
        self.romStateDictionary = {'Start Menu' : self.TunesStartMenu,
                                   'Exit Rom' : self.EndRom}

    def exitRom(self):
        self.stateKey = 'Exit Rom'
        self.HAppControlCenter.removeFlag("Touch Tunes Flag")
        self.HAppControlCenter.killOperation("TouchTunesGraphicsRender")
        self.HAppControlCenter.removeOperation("TouchTunesGraphicsRender")
        print("disconnected")

ThisRom = TunesController(HapticsEngineAddress, stopEvent)
ThisRom.startCurrentState()
ThisRom.runRom()